# функция для репликации из одной качественной переменной нескольких бинарных

my_repl_func <- function(x){
  # x - это порядковый номер колонки, содержащей преобразуемый качественный показатель в датафрейме
  # присваиваем имя отдельной колонке фрейма
  curr_column <- kachestv[,x]
  
  # записываем сами значения всех уникальных значений качественного признака
  variants <- sort(unique(curr_column))
  
  # количество вариант качественного признака записываем
  # variants_num <- length(variants)
  
  # заводим цикл for, который сработает столько раз, сколько уникальных значений качественного признака - 1
  for(i in variants){
    # отрабатываем конструкцию ifelse с учетом того, что в векторе могут быть пропущенные значения (NA)
    new_var <- ifelse(curr_column %in% i, 1, 0)
    # не забываем о пропущенных значениях!
    new_var <- ifelse(is.na(curr_column), NA, new_var)
    
    # добавляем к существующему датафрэйму
    kachestv_1 <<- cbind(kachestv_1, new_var)
    
    # количество столбцов в обновленном дф
    s <- length(kachestv_1)
    
    # переименовываем последний столбец данного датафрейма с учетом значения переменной
    #kachestv_1 <<- rename_at(kachestv_1, vars(s), function(j) return(colnames(kachestv[x])) )
    names(kachestv_1)[s] <<- paste(names(kachestv)[x],".",i)
  }
}

# вычисляем количество показателей в дф
length(kachestv_1)

# "Прогоняем" функцию по всем показателям дф, которые необходимо перекодировать в бинарные
lapply(2:17, my_repl_func)

# смотрим результат
View(kachestv_1)
